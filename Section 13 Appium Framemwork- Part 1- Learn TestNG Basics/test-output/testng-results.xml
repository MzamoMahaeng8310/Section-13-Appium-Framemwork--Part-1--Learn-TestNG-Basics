<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="3" total="15" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="Smoke Test" duration-ms="475" started-at="2021-04-09T13:39:04 CAT" finished-at="2021-04-09T13:39:05 CAT">
    <groups>
      <group name="Connection">
        <method signature="TestNG_Lecture1.Landscape()[pri:0, instance:TestPackage.TestNG_Lecture1@6c3708b3]" name="Landscape" class="TestPackage.TestNG_Lecture1"/>
        <method signature="TestNG_Lecture1.Pavement()[pri:0, instance:TestPackage.TestNG_Lecture1@6c3708b3]" name="Pavement" class="TestPackage.TestNG_Lecture1"/>
      </group> <!-- Connection -->
      <group name="Smoke">
        <method signature="TestNG_Lecture1.LampPost()[pri:0, instance:TestPackage.TestNG_Lecture1@6c3708b3]" name="LampPost" class="TestPackage.TestNG_Lecture1"/>
        <method signature="TestNG_Lecture2.Marcodoor()[pri:0, instance:TestPackage.TestNG_Lecture2@3e9b1010]" name="Marcodoor" class="TestPackage.TestNG_Lecture2"/>
        <method signature="TestNG_Lecture3.bathroom()[pri:0, instance:TestPackage.TestNG_Lecture3@3cef309d]" name="bathroom" class="TestPackage.TestNG_Lecture3"/>
      </group> <!-- Smoke -->
    </groups>
    <test name="Smoke" duration-ms="357" started-at="2021-04-09T13:39:04 CAT" finished-at="2021-04-09T13:39:05 CAT">
      <class name="TestPackage.TestNGAnnotationHelp">
        <test-method status="PASS" signature="GrassCombinationData(java.lang.String, java.lang.String)[pri:0, instance:TestPackage.TestNGAnnotationHelp@6f1fba17]" name="GrassCombinationData" duration-ms="8" started-at="2021-04-09T13:39:05 CAT" data-provider="getData" finished-at="2021-04-09T13:39:05 CAT">
          <params>
            <param index="0">
              <value>
                <![CDATA[KikutyGrass]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Compost Soil]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GrassCombinationData -->
        <test-method status="PASS" signature="GrassCombinationData(java.lang.String, java.lang.String)[pri:0, instance:TestPackage.TestNGAnnotationHelp@6f1fba17]" name="GrassCombinationData" duration-ms="13" started-at="2021-04-09T13:39:05 CAT" data-provider="getData" finished-at="2021-04-09T13:39:05 CAT">
          <params>
            <param index="0">
              <value>
                <![CDATA[BuffaloGrass]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SufphurCompounds]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GrassCombinationData -->
        <test-method status="PASS" signature="GrassCombinationData(java.lang.String, java.lang.String)[pri:0, instance:TestPackage.TestNGAnnotationHelp@6f1fba17]" name="GrassCombinationData" duration-ms="17" started-at="2021-04-09T13:39:05 CAT" data-provider="getData" finished-at="2021-04-09T13:39:05 CAT">
          <params>
            <param index="0">
              <value>
                <![CDATA[EverGreenGrass]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[VolcanicAsh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GrassCombinationData -->
        <test-method status="PASS" signature="MethodC()[pri:0, instance:TestPackage.TestNGAnnotationHelp@6f1fba17]" name="MethodC" duration-ms="7" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MethodC -->
        <test-method status="PASS" signature="MethodA()[pri:0, instance:TestPackage.TestNGAnnotationHelp@6f1fba17]" name="MethodA" duration-ms="5" started-at="2021-04-09T13:39:05 CAT" depends-on-methods="TestPackage.TestNGAnnotationHelp.MethodC" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MethodA -->
      </class> <!-- TestPackage.TestNGAnnotationHelp -->
      <class name="TestPackage.TestNG_Lecture1">
        <test-method status="PASS" signature="LampPost()[pri:0, instance:TestPackage.TestNG_Lecture1@6c3708b3]" name="LampPost" duration-ms="27" started-at="2021-04-09T13:39:04 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LampPost -->
        <test-method status="PASS" signature="AfterMethodExecution()[pri:0, instance:TestPackage.TestNG_Lecture1@6c3708b3]" name="AfterMethodExecution" is-config="true" duration-ms="25" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodExecution -->
        <test-method status="PASS" signature="Landscape()[pri:0, instance:TestPackage.TestNG_Lecture1@6c3708b3]" name="Landscape" duration-ms="8" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Landscape -->
        <test-method status="PASS" signature="AfterMethodExecution()[pri:0, instance:TestPackage.TestNG_Lecture1@6c3708b3]" name="AfterMethodExecution" is-config="true" duration-ms="1" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodExecution -->
        <test-method status="PASS" signature="Pavement()[pri:0, instance:TestPackage.TestNG_Lecture1@6c3708b3]" name="Pavement" duration-ms="7" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Pavement -->
        <test-method status="PASS" signature="AfterMethodExecution()[pri:0, instance:TestPackage.TestNG_Lecture1@6c3708b3]" name="AfterMethodExecution" is-config="true" duration-ms="3" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodExecution -->
        <test-method status="PASS" signature="House()[pri:0, instance:TestPackage.TestNG_Lecture1@6c3708b3]" name="House" duration-ms="6" started-at="2021-04-09T13:39:05 CAT" depends-on-methods="TestPackage.TestNG_Lecture1.Landscape, TestPackage.TestNG_Lecture1.Pavement" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- House -->
        <test-method status="PASS" signature="AfterMethodExecution()[pri:0, instance:TestPackage.TestNG_Lecture1@6c3708b3]" name="AfterMethodExecution" is-config="true" duration-ms="3" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethodExecution -->
      </class> <!-- TestPackage.TestNG_Lecture1 -->
      <class name="TestPackage.TestNG_Lecture2">
        <test-method status="PASS" signature="BeforeMethodAnnotation()[pri:0, instance:TestPackage.TestNG_Lecture2@3e9b1010]" name="BeforeMethodAnnotation" is-config="true" duration-ms="1" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethodAnnotation -->
        <test-method status="PASS" signature="Marcodoor()[pri:0, instance:TestPackage.TestNG_Lecture2@3e9b1010]" name="Marcodoor" duration-ms="4" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Marcodoor -->
        <test-method status="PASS" signature="BeforeMethodAnnotation()[pri:0, instance:TestPackage.TestNG_Lecture2@3e9b1010]" name="BeforeMethodAnnotation" is-config="true" duration-ms="1" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethodAnnotation -->
        <test-method status="PASS" signature="Maxidoor()[pri:0, instance:TestPackage.TestNG_Lecture2@3e9b1010]" name="Maxidoor" duration-ms="8" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Maxidoor -->
        <test-method status="PASS" signature="AfterExecution()[pri:0, instance:TestPackage.TestNG_Lecture2@3e9b1010]" name="AfterExecution" is-config="true" duration-ms="3" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterExecution -->
      </class> <!-- TestPackage.TestNG_Lecture2 -->
    </test> <!-- Smoke -->
    <test name="Second Test Folder" duration-ms="47" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
      <class name="TestPackage.TestNG_Lecture3">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:TestPackage.TestNG_Lecture3@3cef309d]" name="BeforeClass" is-config="true" duration-ms="1" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="bathroom()[pri:0, instance:TestPackage.TestNG_Lecture3@3cef309d]" name="bathroom" duration-ms="2" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bathroom -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:TestPackage.TestNG_Lecture3@3cef309d]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:TestPackage.TestNG_Lecture3@3cef309d]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:TestPackage.TestNG_Lecture3@3cef309d]" name="AfterClass" is-config="true" duration-ms="26" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
        <test-method status="PASS" signature="AfterSuiteOperatons()[pri:0, instance:TestPackage.TestNG_Lecture3@3cef309d]" name="AfterSuiteOperatons" is-config="true" duration-ms="1" started-at="2021-04-09T13:39:05 CAT" finished-at="2021-04-09T13:39:05 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuiteOperatons -->
      </class> <!-- TestPackage.TestNG_Lecture3 -->
      <class name="TestPackage.TestNG_Lecture2">
        <test-method status="PASS" signature="BeforeSuiteGlobal()[pri:0, instance:TestPackage.TestNG_Lecture2@3e9b1010]" name="BeforeSuiteGlobal" is-config="true" duration-ms="16" started-at="2021-04-09T13:39:04 CAT" finished-at="2021-04-09T13:39:04 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeSuiteGlobal -->
      </class> <!-- TestPackage.TestNG_Lecture2 -->
    </test> <!-- Second Test Folder -->
  </suite> <!-- Smoke Test -->
</testng-results>
